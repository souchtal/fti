<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="tools_8h" kind="file" language="C++">
    <compoundname>tools.h</compoundname>
    <includedby refid="interface_8h" local="yes">/home/bscuser/Documents/release/dev/fti/src/interface.h</includedby>
    <invincdepgraph>
      <node id="9">
        <label>/home/bscuser/Documents/release/dev/fti/src/failure-injection.c</label>
        <link refid="failure-injection_8c"/>
      </node>
      <node id="15">
        <label>/home/bscuser/Documents/release/dev/fti/src/postreco.c</label>
        <link refid="postreco_8c"/>
      </node>
      <node id="2">
        <label>/home/bscuser/Documents/release/dev/fti/src/interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/bscuser/Documents/release/dev/fti/src/icp.c</label>
        <link refid="icp_8c"/>
      </node>
      <node id="7">
        <label>/home/bscuser/Documents/release/dev/fti/src/conf.c</label>
        <link refid="conf_8c"/>
      </node>
      <node id="14">
        <label>/home/bscuser/Documents/release/dev/fti/src/postckpt.c</label>
        <link refid="postckpt_8c"/>
      </node>
      <node id="5">
        <label>/home/bscuser/Documents/release/dev/fti/src/api.c</label>
        <link refid="api_8c"/>
      </node>
      <node id="13">
        <label>/home/bscuser/Documents/release/dev/fti/src/meta.c</label>
        <link refid="meta_8c"/>
      </node>
      <node id="6">
        <label>/home/bscuser/Documents/release/dev/fti/src/checkpoint.c</label>
        <link refid="checkpoint_8c"/>
      </node>
      <node id="8">
        <label>/home/bscuser/Documents/release/dev/fti/src/dcp.c</label>
        <link refid="dcp_8c"/>
      </node>
      <node id="16">
        <label>/home/bscuser/Documents/release/dev/fti/src/recover.c</label>
        <link refid="recover_8c"/>
      </node>
      <node id="20">
        <label>/home/bscuser/Documents/release/dev/fti/src/utility.c</label>
        <link refid="utility_8c"/>
      </node>
      <node id="18">
        <label>/home/bscuser/Documents/release/dev/fti/src/tools.c</label>
        <link refid="tools_8c"/>
      </node>
      <node id="17">
        <label>/home/bscuser/Documents/release/dev/fti/src/stage.c</label>
        <link refid="stage_8c"/>
      </node>
      <node id="1">
        <label>/home/bscuser/Documents/release/dev/fti/src/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/bscuser/Documents/release/dev/fti/src/fti-io.c</label>
        <link refid="fti-io_8c"/>
      </node>
      <node id="12">
        <label>/home/bscuser/Documents/release/dev/fti/src/macros.c</label>
        <link refid="macros_8c"/>
      </node>
      <node id="19">
        <label>/home/bscuser/Documents/release/dev/fti/src/topo.c</label>
        <link refid="topo_8c"/>
      </node>
      <node id="3">
        <label>/home/bscuser/Documents/release/dev/fti/src/api-cuda.c</label>
        <link refid="api-cuda_8c"/>
      </node>
      <node id="4">
        <label>/home/bscuser/Documents/release/dev/fti/src/api-cuda.h</label>
        <link refid="api-cuda_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tools_8h_1a691a9e560e92286bb5bc1b5cf2f7b199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTI_Print</definition>
        <argsstring>(char *msg, int priority)</argsstring>
        <name>FTI_Print</name>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Prints FTI messages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to print. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority of the message to be printed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para>
</simplesect>
This function prints messages depending on their priority and the verbosity level set by the user. DEBUG messages are printed by all processes with their rank. INFO messages are printed by one process. ERROR messages are printed with errno. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="9" column="6" bodyfile="/home/bscuser/Documents/release/dev/fti/src/api.c" bodystart="2548" bodyend="2576" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="9" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1ad7413da2f3a603eb2da996ea201a7665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_Checksum</definition>
        <argsstring>(FTIT_execution *FTI_Exec, FTIT_dataset *FTI_Data, FTIT_configuration *FTI_Conf, char *checksum)</argsstring>
        <name>FTI_Checksum</name>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__dataset" kindref="compound">FTIT_dataset</ref> *</type>
          <declname>FTI_Data</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref> *</type>
          <declname>FTI_Conf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>checksum</declname>
        </param>
        <briefdescription>
<para>It calculates checksum of the checkpoint file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Exec</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checksum</parametername>
</parameternamelist>
<parameterdescription>
<para>Checksum that is calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function calculates checksum of the checkpoint file based on MD5 algorithm and saves it in checksum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="10" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="252" bodyend="263" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="10" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1a0abe7d90a75d724af67071b5a672785d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_VerifyChecksum</definition>
        <argsstring>(char *fileName, char *checksumToCmp)</argsstring>
        <name>FTI_VerifyChecksum</name>
        <param>
          <type>char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>checksumToCmp</declname>
        </param>
        <briefdescription>
<para>It compares checksum of the checkpoint file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename of the checkpoint. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checksumToCmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Checksum to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function calculates checksum of the checkpoint file based on MD5 algorithm. It compares calculated hash value with the one saved in the file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="12" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="278" bodyend="321" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="12" declcolumn="5"/>
        <references refid="fti_8h_1a4da53a2ca9ef19b414ca7e2522c4864a" compoundref="fti_8h" startline="12">FTI_BUFS</references>
        <references refid="fti_8h_1a06d23a2210e17078a6a8862bb6ed3dbd" compoundref="fti_8h" startline="20">FTI_NSCS</references>
        <references refid="api_8c_1a691a9e560e92286bb5bc1b5cf2f7b199" compoundref="api_8c" startline="2548" endline="2576">FTI_Print</references>
        <references refid="fti_8h_1a8c1f0a06b877c18a7270d54c5e6039cf" compoundref="fti_8h" startline="18">FTI_SCES</references>
        <references refid="fti-intern_8h_1a93eeeef1e283517099194859e3811ea3" compoundref="fti-intern_8h" startline="59">FTI_WARN</references>
        <references refid="fti-intern_8h_1a09a4f4b2f28cbe522d9b80153666029c" compoundref="fti-intern_8h" startline="41">MD5_DIGEST_LENGTH</references>
        <references refid="fti-intern_8h_1ab7d658b118c653d9a61ef6adde6a80c7" compoundref="fti-intern_8h" startline="43">MD5_DIGEST_STRING_LENGTH</references>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1a950803008f7cef4892fbba9b2069928e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_Try</definition>
        <argsstring>(int result, char *message)</argsstring>
        <name>FTI_Try</name>
        <param>
          <type>int</type>
          <declname>result</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>It receives the return code of a function and prints a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Result to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to print. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer The same result as passed in parameter.</para>
</simplesect>
This function checks the result from a function and then decides to print the message either as a debug message or as a warning. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="13" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="335" bodyend="349" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="13" declcolumn="5"/>
        <references refid="fti_8h_1a4da53a2ca9ef19b414ca7e2522c4864a" compoundref="fti_8h" startline="12">FTI_BUFS</references>
        <references refid="fti-intern_8h_1a299db837571db9e73119d159b3428fe0" compoundref="fti-intern_8h" startline="65">FTI_DBUG</references>
        <references refid="fti_8h_1a7dee5a1994faa8e4a2664942d4d8c024" compoundref="fti_8h" startline="16">FTI_DONE</references>
        <references refid="api_8c_1a691a9e560e92286bb5bc1b5cf2f7b199" compoundref="api_8c" startline="2548" endline="2576">FTI_Print</references>
        <references refid="fti_8h_1a8c1f0a06b877c18a7270d54c5e6039cf" compoundref="fti_8h" startline="18">FTI_SCES</references>
        <references refid="fti-intern_8h_1a93eeeef1e283517099194859e3811ea3" compoundref="fti-intern_8h" startline="59">FTI_WARN</references>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1a803fddbbbdc2e160a5cb4249100e8a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTI_MallocMeta</definition>
        <argsstring>(FTIT_execution *FTI_Exec, FTIT_topology *FTI_Topo)</argsstring>
        <name>FTI_MallocMeta</name>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref> *</type>
          <declname>FTI_Topo</declname>
        </param>
        <briefdescription>
<para>It mallocs memory for the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Exec</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Topo</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology metadata.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function mallocs the memory used for the metadata storage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="14" column="6" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="361" bodyend="394" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1a099b42118594b7ec8469348819bfaf93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTI_FreeMeta</definition>
        <argsstring>(FTIT_execution *FTI_Exec)</argsstring>
        <name>FTI_FreeMeta</name>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <briefdescription>
<para>It frees memory for the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Exec</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution metadata.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function frees the memory used for the metadata storage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="15" column="6" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="405" bodyend="423" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1a152b83c7a93371bef4f0bcbe34620d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTI_FreeTypesAndGroups</definition>
        <argsstring>(FTIT_execution *FTI_Exec)</argsstring>
        <name>FTI_FreeTypesAndGroups</name>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <briefdescription>
<para>It frees memory for the types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Exec</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution metadata.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function frees the memory used for the type storage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="16" column="6" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="469" bodyend="484" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1ad41f9b1988730c56c052047cfb3f6283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_InitGroupsAndTypes</definition>
        <argsstring>(FTIT_execution *FTI_Exec)</argsstring>
        <name>FTI_InitGroupsAndTypes</name>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <briefdescription>
<para>It mallocs memory for the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Exec</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Topo</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology metadata.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function mallocs the memory used for the metadata storage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="17" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="435" bodyend="458" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1a924446571112185f563d5ec1e386afb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_InitBasicTypes</definition>
        <argsstring>(FTIT_dataset *FTI_Data)</argsstring>
        <name>FTI_InitBasicTypes</name>
        <param>
          <type><ref refid="structFTIT__dataset" kindref="compound">FTIT_dataset</ref> *</type>
          <declname>FTI_Data</declname>
        </param>
        <briefdescription>
<para>It creates the basic datatypes and the dataset array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function creates the basic data types using FTIT_Type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="18" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="496" bodyend="515" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="18" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1ad95399f229aa8c9ae4aef2574d732f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_InitExecVars</definition>
        <argsstring>(FTIT_configuration *FTI_Conf, FTIT_execution *FTI_Exec, FTIT_topology *FTI_Topo, FTIT_checkpoint *FTI_Ckpt, FTIT_injection *FTI_Inje)</argsstring>
        <name>FTI_InitExecVars</name>
        <param>
          <type><ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref> *</type>
          <declname>FTI_Conf</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref> *</type>
          <declname>FTI_Topo</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref> *</type>
          <declname>FTI_Ckpt</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__injection" kindref="compound">FTIT_injection</ref> *</type>
          <declname>FTI_Inje</declname>
        </param>
        <briefdescription>
<para>Init of the static variables. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function initializes all static variables to zero. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="19" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="88" bodyend="236" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="19" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1ac4bfe54a9748e8915a5a43c17b334452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_RmDir</definition>
        <argsstring>(char path[FTI_BUFS], int flag)</argsstring>
        <name>FTI_RmDir</name>
        <param>
          <type>char</type>
          <declname>path</declname>
          <array>[FTI_BUFS]</array>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>It erases a directory and all its files. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the directory we want to erase. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to 1 to activate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function erases a directory and all its files. It focusses on the checkpoint directories created by FTI so it does NOT handle recursive erasing if the given directory includes other directories. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="22" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="530" bodyend="574" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="22" declcolumn="5"/>
        <references refid="fti_8h_1a4da53a2ca9ef19b414ca7e2522c4864a" compoundref="fti_8h" startline="12">FTI_BUFS</references>
        <references refid="fti-intern_8h_1a299db837571db9e73119d159b3428fe0" compoundref="fti-intern_8h" startline="65">FTI_DBUG</references>
        <references refid="fti-intern_8h_1a5cb1252ae17ef4ac13b3dbe5a8b1ab13" compoundref="fti-intern_8h" startline="57">FTI_EROR</references>
        <references refid="api_8c_1a691a9e560e92286bb5bc1b5cf2f7b199" compoundref="api_8c" startline="2548" endline="2576">FTI_Print</references>
        <references refid="fti_8h_1a8c1f0a06b877c18a7270d54c5e6039cf" compoundref="fti_8h" startline="18">FTI_SCES</references>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1a09811bb56f318eab67b3d37bff86cf7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_Clean</definition>
        <argsstring>(FTIT_configuration *FTI_Conf, FTIT_topology *FTI_Topo, FTIT_checkpoint *FTI_Ckpt, int level)</argsstring>
        <name>FTI_Clean</name>
        <param>
          <type><ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref> *</type>
          <declname>FTI_Conf</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref> *</type>
          <declname>FTI_Topo</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref> *</type>
          <declname>FTI_Ckpt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>It erases the previous checkpoints and their metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Topo</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Ckpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Checkpoint metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Level of cleaning. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function erases previous checkpoint depending on the level of the current checkpoint. Level 5 means complete clean up. Level 6 means clean up local nodes but keep last checkpoint data and metadata in the PFS. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="23" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="591" bodyend="664" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="23" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tools_8h_1af04f21cd048b6ecd053b1e9630a79d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_FindVarInMeta</definition>
        <argsstring>(FTIT_execution *FTI_Exec, FTIT_dataset *FTI_Data, int id, int *currentIndex, int *oldIndex)</argsstring>
        <name>FTI_FindVarInMeta</name>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__dataset" kindref="compound">FTIT_dataset</ref> *</type>
          <declname>FTI_Data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>currentIndex</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>oldIndex</declname>
        </param>
        <briefdescription>
<para>Finds the the id of a protected variable in the metadata file . </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Exec*</parametername>
</parameternamelist>
<parameterdescription>
<para>Checkpoint execution data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structFTIT__dataset" kindref="compound">FTIT_dataset</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Information regarding the protected variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>id Variable id we are searching for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>*currentIndex The variable index of the found variable in FTI_Data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>*oldIndex The variable index of the found variable in FTI_metadata structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int FTI_SCES on succefully finding a variable</para>
</simplesect>
This function matches the index of a current protected variable with the index of a variable protected on the previous execution (Recovery) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h" line="26" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/tools.c" bodystart="704" bodyend="731" declfile="/home/bscuser/Documents/release/dev/fti/src/tools.h" declline="26" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__TOOLS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__TOOLS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a691a9e560e92286bb5bc1b5cf2f7b199" kindref="member">FTI_Print</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1ad7413da2f3a603eb2da996ea201a7665" kindref="member">FTI_Checksum</ref>(<ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec,<sp/><ref refid="structFTIT__dataset" kindref="compound">FTIT_dataset</ref>*<sp/>FTI_Data,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref>*<sp/>FTI_Conf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>checksum);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a0abe7d90a75d724af67071b5a672785d" kindref="member">FTI_VerifyChecksum</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>checksumToCmp);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a950803008f7cef4892fbba9b2069928e" kindref="member">FTI_Try</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a803fddbbbdc2e160a5cb4249100e8a00" kindref="member">FTI_MallocMeta</ref>(<ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec,<sp/><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref>*<sp/>FTI_Topo);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a099b42118594b7ec8469348819bfaf93" kindref="member">FTI_FreeMeta</ref>(<ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a152b83c7a93371bef4f0bcbe34620d6e" kindref="member">FTI_FreeTypesAndGroups</ref>(<ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1ad41f9b1988730c56c052047cfb3f6283" kindref="member">FTI_InitGroupsAndTypes</ref>(<ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a924446571112185f563d5ec1e386afb1" kindref="member">FTI_InitBasicTypes</ref>(<ref refid="structFTIT__dataset" kindref="compound">FTIT_dataset</ref>*<sp/>FTI_Data);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1ad95399f229aa8c9ae4aef2574d732f7d" kindref="member">FTI_InitExecVars</ref>(<ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref>*<sp/>FTI_Conf,<sp/><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref>*<sp/>FTI_Topo,<sp/><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref>*<sp/>FTI_Ckpt,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structFTIT__injection" kindref="compound">FTIT_injection</ref>*<sp/>FTI_Inje);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1ac4bfe54a9748e8915a5a43c17b334452" kindref="member">FTI_RmDir</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[<ref refid="fti_8h_1a4da53a2ca9ef19b414ca7e2522c4864a" kindref="member">FTI_BUFS</ref>],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1a09811bb56f318eab67b3d37bff86cf7f" kindref="member">FTI_Clean</ref>(<ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref>*<sp/>FTI_Conf,<sp/><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref>*<sp/>FTI_Topo,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref>*<sp/>FTI_Ckpt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tools_8h_1af04f21cd048b6ecd053b1e9630a79d84" kindref="member">FTI_FindVarInMeta</ref>(<ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref><sp/>*FTI_Exec,<sp/><ref refid="structFTIT__dataset" kindref="compound">FTIT_dataset</ref><sp/>*FTI_Data,<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*currentIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*oldIndex);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__TOOLS_H__</highlight></codeline>
    </programlisting>
    <location file="/home/bscuser/Documents/release/dev/fti/src/tools.h"/>
  </compounddef>
</doxygen>
