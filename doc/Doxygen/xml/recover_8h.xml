<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="recover_8h" kind="file" language="C++">
    <compoundname>recover.h</compoundname>
    <includedby refid="interface_8h" local="yes">/home/bscuser/Documents/release/dev/fti/src/interface.h</includedby>
    <invincdepgraph>
      <node id="9">
        <label>/home/bscuser/Documents/release/dev/fti/src/failure-injection.c</label>
        <link refid="failure-injection_8c"/>
      </node>
      <node id="15">
        <label>/home/bscuser/Documents/release/dev/fti/src/postreco.c</label>
        <link refid="postreco_8c"/>
      </node>
      <node id="2">
        <label>/home/bscuser/Documents/release/dev/fti/src/interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/bscuser/Documents/release/dev/fti/src/icp.c</label>
        <link refid="icp_8c"/>
      </node>
      <node id="7">
        <label>/home/bscuser/Documents/release/dev/fti/src/conf.c</label>
        <link refid="conf_8c"/>
      </node>
      <node id="14">
        <label>/home/bscuser/Documents/release/dev/fti/src/postckpt.c</label>
        <link refid="postckpt_8c"/>
      </node>
      <node id="5">
        <label>/home/bscuser/Documents/release/dev/fti/src/api.c</label>
        <link refid="api_8c"/>
      </node>
      <node id="13">
        <label>/home/bscuser/Documents/release/dev/fti/src/meta.c</label>
        <link refid="meta_8c"/>
      </node>
      <node id="6">
        <label>/home/bscuser/Documents/release/dev/fti/src/checkpoint.c</label>
        <link refid="checkpoint_8c"/>
      </node>
      <node id="8">
        <label>/home/bscuser/Documents/release/dev/fti/src/dcp.c</label>
        <link refid="dcp_8c"/>
      </node>
      <node id="16">
        <label>/home/bscuser/Documents/release/dev/fti/src/recover.c</label>
        <link refid="recover_8c"/>
      </node>
      <node id="1">
        <label>/home/bscuser/Documents/release/dev/fti/src/recover.h</label>
        <link refid="recover_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/bscuser/Documents/release/dev/fti/src/utility.c</label>
        <link refid="utility_8c"/>
      </node>
      <node id="18">
        <label>/home/bscuser/Documents/release/dev/fti/src/tools.c</label>
        <link refid="tools_8c"/>
      </node>
      <node id="17">
        <label>/home/bscuser/Documents/release/dev/fti/src/stage.c</label>
        <link refid="stage_8c"/>
      </node>
      <node id="10">
        <label>/home/bscuser/Documents/release/dev/fti/src/fti-io.c</label>
        <link refid="fti-io_8c"/>
      </node>
      <node id="12">
        <label>/home/bscuser/Documents/release/dev/fti/src/macros.c</label>
        <link refid="macros_8c"/>
      </node>
      <node id="19">
        <label>/home/bscuser/Documents/release/dev/fti/src/topo.c</label>
        <link refid="topo_8c"/>
      </node>
      <node id="3">
        <label>/home/bscuser/Documents/release/dev/fti/src/api-cuda.c</label>
        <link refid="api-cuda_8c"/>
      </node>
      <node id="4">
        <label>/home/bscuser/Documents/release/dev/fti/src/api-cuda.h</label>
        <link refid="api-cuda_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="recover_8h_1a29f1aae84d9ec782867b16905241e531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_CheckFile</definition>
        <argsstring>(char *fn, long fs, char *checksum)</argsstring>
        <name>FTI_CheckFile</name>
        <param>
          <type>char *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>long</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>checksum</declname>
        </param>
        <briefdescription>
<para>It checks if a file exist and that its size is &apos;correct&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>The ckpt. file name to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fs</parametername>
</parameternamelist>
<parameterdescription>
<para>The ckpt. file size to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checksum</parametername>
</parameternamelist>
<parameterdescription>
<para>The file checksum to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer 0 if file exists, 1 if not or wrong size.</para>
</simplesect>
This function checks whether a file exist or not and if its size is the expected one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/recover.h" line="4" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/recover.c" bodystart="54" bodyend="92" declfile="/home/bscuser/Documents/release/dev/fti/src/recover.h" declline="4" declcolumn="5"/>
        <references refid="fti_8h_1a4da53a2ca9ef19b414ca7e2522c4864a" compoundref="fti_8h" startline="12">FTI_BUFS</references>
        <references refid="api_8c_1a691a9e560e92286bb5bc1b5cf2f7b199" compoundref="api_8c" startline="2545" endline="2573">FTI_Print</references>
        <references refid="fti_8h_1a8c1f0a06b877c18a7270d54c5e6039cf" compoundref="fti_8h" startline="18">FTI_SCES</references>
        <references refid="tools_8c_1a0abe7d90a75d724af67071b5a672785d" compoundref="tools_8c" startline="278" endline="321">FTI_VerifyChecksum</references>
        <references refid="fti-intern_8h_1a93eeeef1e283517099194859e3811ea3" compoundref="fti-intern_8h" startline="59">FTI_WARN</references>
      </memberdef>
      <memberdef kind="function" id="recover_8h_1a0d67927230e5cfb7848475129aa3b97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_CheckErasures</definition>
        <argsstring>(FTIT_configuration *FTI_Conf, FTIT_execution *FTI_Exec, FTIT_topology *FTI_Topo, FTIT_checkpoint *FTI_Ckpt, int *erased)</argsstring>
        <name>FTI_CheckErasures</name>
        <param>
          <type><ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref> *</type>
          <declname>FTI_Conf</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref> *</type>
          <declname>FTI_Topo</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref> *</type>
          <declname>FTI_Ckpt</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>erased</declname>
        </param>
        <briefdescription>
<para>It detects all the erasures for a particular level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Exec</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Topo</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Ckpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Checkpoint metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>erased</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of erasures to fill. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function detects all the erasures for L1, L2 and L3. It return the results in the erased array. The search for erasures is done at the three levels independently on the current recovery level. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/recover.h" line="5" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/recover.c" bodystart="110" bodyend="185" declfile="/home/bscuser/Documents/release/dev/fti/src/recover.h" declline="5" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="recover_8h_1aa5ca92e3168d5b1ee7830507f8847dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FTI_RecoverFiles</definition>
        <argsstring>(FTIT_configuration *FTI_Conf, FTIT_execution *FTI_Exec, FTIT_topology *FTI_Topo, FTIT_checkpoint *FTI_Ckpt)</argsstring>
        <name>FTI_RecoverFiles</name>
        <param>
          <type><ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref> *</type>
          <declname>FTI_Conf</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref> *</type>
          <declname>FTI_Exec</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref> *</type>
          <declname>FTI_Topo</declname>
        </param>
        <param>
          <type><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref> *</type>
          <declname>FTI_Ckpt</declname>
        </param>
        <briefdescription>
<para>It decides wich action take depending on the restart level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FTI_Conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Exec</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Topo</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FTI_Ckpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Checkpoint metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer FTI_SCES if successful.</para>
</simplesect>
This function launches the required action depending on the recovery level. The recovery level is detected from the checkpoint ID of the last checkpoint taken. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bscuser/Documents/release/dev/fti/src/recover.h" line="8" column="5" bodyfile="/home/bscuser/Documents/release/dev/fti/src/recover.c" bodystart="202" bodyend="380" declfile="/home/bscuser/Documents/release/dev/fti/src/recover.h" declline="8" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__RECOVER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__RECOVER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="recover_8h_1a29f1aae84d9ec782867b16905241e531" kindref="member">FTI_CheckFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fs,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>checksum);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="recover_8h_1a0d67927230e5cfb7848475129aa3b97c" kindref="member">FTI_CheckErasures</ref>(<ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref>*<sp/>FTI_Conf,<sp/><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref>*<sp/>FTI_Topo,<sp/><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref>*<sp/>FTI_Ckpt,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*erased);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="recover_8h_1aa5ca92e3168d5b1ee7830507f8847dec" kindref="member">FTI_RecoverFiles</ref>(<ref refid="structFTIT__configuration" kindref="compound">FTIT_configuration</ref>*<sp/>FTI_Conf,<sp/><ref refid="structFTIT__execution" kindref="compound">FTIT_execution</ref>*<sp/>FTI_Exec,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structFTIT__topology" kindref="compound">FTIT_topology</ref>*<sp/>FTI_Topo,<sp/><ref refid="structFTIT__checkpoint" kindref="compound">FTIT_checkpoint</ref>*<sp/>FTI_Ckpt);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__RECOVER_H__</highlight></codeline>
    </programlisting>
    <location file="/home/bscuser/Documents/release/dev/fti/src/recover.h"/>
  </compounddef>
</doxygen>
